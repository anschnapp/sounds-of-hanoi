define :qsort do |list|
  if list.empty?
    return list
  end
  
  a = list.shift
  low = []
  high = []
  list.each do |element|
    play element, release: 0.1
    sleep 0.03
    if element <= a
      low << element
    else
      high << element
    end
  end
  
  sortedLow = qsort low
  sortedHigh = qsort high
  
  result = []
  result = sortedLow
  result << a
  result = result + sortedHigh
  return result
end

define :playlist do |list|
  list.each do |element|
    play element, release: 0.1
    sleep 0.03
  end
end

define :generateInitialShuffledList do
  # initialize a list of 400 items with sounds from 40 to 140 (so quite low and quite high)
  sound = 40
  list = []
  400.times do
    list << sound
    sound = sound + 0.25
  end
  return list.shuffle
end


shuffledList = generateInitialShuffledList

print 'start playing initial shuffled list'
playlist shuffledList
print 'finish playing initial shuffled list'
sleep 2

print 'start sorting and playing every touched number as a side effect'
orderedList = qsort shuffledList
print 'finsish sorting and playing every touched number as a side effect'

sleep 2
print 'start playing ordered list'
playlist orderedList
print 'finish playing ordered list'


